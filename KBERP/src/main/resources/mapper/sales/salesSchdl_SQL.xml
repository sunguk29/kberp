<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="salesSchdl">
	<insert id="salesSchdlAdd" parameterType="hashmap">
		INSERT INTO  SALES_SCHDL(SCHDL_NUM, EMP_NUM, SALES_NUM, LEAD_NUM, ACTVTY_CLSFY_NUM, START_DATE_HR, END_DATE_HR, ACTVTY_CONT)
		VALUES (SALES_SCHDL_SEQ.NEXTVAL, #{sEmpNum}, #{sNum}, #{lNum}, #{ssactvtyclsfy}, #{sdt}, #{edt}, #{ssactvtycont})
	</insert>
	<select id="getSalesSchdlList" parameterType="hashmap" resultType="hashmap">
		SELECT A.START_DATE_HR, A.END_DATE_HR, A.ACTVTY_CLSFY_NUM, L.LEAD_NAME AS SALES_NAME, A.LEAD_NAME, A.LEAD_NUM, A.SALES_NUM, A.CLNT_CMPNY_NAME AS LEAD_CC_NAME, CC.CLNT_CMPNY_NAME AS SALES_CC_NAME
		FROM( SELECT A.START_DATE_HR, DECODE(A.END_DATE_HR, NULL, '미정', A.END_DATE_HR) AS END_DATE_HR, A.ACTVTY_CLSFY_NUM, A.CLNT_CMPNY_NAME, A.LEAD_NAME, A.LEAD_NUM, A.SALES_NUM
      		  FROM ( SELECT SUBSTR(SS.START_DATE_HR, 12, 16) AS START_DATE_HR, SUBSTR(SS.END_DATE_HR, 12, 16) AS END_DATE_HR,
					  		CASE WHEN SS.ACTVTY_CLSFY_NUM = 0 THEN '전화'
					  	   		 WHEN SS.ACTVTY_CLSFY_NUM = 1 THEN '메일'
					  	   		 WHEN SS.ACTVTY_CLSFY_NUM = 2 THEN '방문'
					       		 ELSE '기타'
					  		END AS ACTVTY_CLSFY_NUM,CC.CLNT_CMPNY_NAME,L.LEAD_NAME, L.LEAD_NUM, S.SALES_NUM,
					  		ROW_NUMBER() OVER(ORDER BY SS.START_DATE_HR DESC) AS RNUM
			   		 FROM SALES_SCHDL SS LEFT OUTER JOIN LEAD L
						   		   			    	  ON SS.LEAD_NUM = L.LEAD_NUM
								   		 LEFT OUTER JOIN SALES S
										  			  ON SS.SALES_NUM = S.SALES_NUM
								   		 LEFT OUTER JOIN ENTRPRS_CLNT CL
										  			  ON L.CLNT_NUM = CL.CLNT_NUM
								   		 LEFT OUTER JOIN CLNT_CMPNY CC
										  			  ON CL.CLNT_NAME = CC.CLNT_NAME
			  		 WHERE SUBSTR(SS.START_DATE_HR, 1, 10) = TRIM(#{ctt}) ) A
	     ORDER BY A.RNUM DESC) A LEFT OUTER JOIN SALES S 
	    			 						  ON A.SALES_NUM = S.SALES_NUM
                                 LEFT OUTER JOIN LEAD L 
                            			 	  ON S.LEAD_NUM = L.LEAD_NUM
                                 LEFT OUTER JOIN ENTRPRS_CLNT CL
                                			  ON CL.CLNT_NUM = L.CLNT_NUM
                                 LEFT OUTER JOIN CLNT_CMPNY CC
                                			  ON CC.CLNT_NAME = CL.CLNT_NAME
	</select>
	<select id="getMgrList" resultType="hashmap" parameterType="hashmap">
		SELECT ME.EMP_NUM, ME.EMP_NAME, ME.RANK_NAME, ME.DEPT_NAME
		FROM ( SELECT E.EMP_NUM, E.EMP_NAME, R.RANK_NAME, D.DEPT_NUM, D.DEPT_NAME, ROW_NUMBER() OVER(ORDER BY E.EMP_NUM ASC) AS RNUM
		        FROM EMP E INNER JOIN APNTM A
		                           ON E.EMP_NUM = A.EMP_NUM
		                   INNER JOIN DEPT D
		                           ON A.DEPT_NUM = D.DEPT_NUM
		                   INNER JOIN RANK R
		                           ON A.RANK_NUM = R.RANK_NUM
		        WHERE D.DEPT_NAME LIKE '영%'
		    ) ME
		WHERE ME.RNUM BETWEEN #{startCount} AND #{endCount}
		<choose>
			<when test="deptS != 6">
       			AND ME.DEPT_NUM = #{deptS}
			</when>
		</choose>
		<if test="searchT != null and searchT != ''">
        	<choose>
       			<when test="empS == 0">
            	   AND ME.EMP_NUM LIKE '%' || #{searchT} || '%'
            	</when>
       			<when test="empS == 1">
            	   AND ME.EMP_NAME LIKE '%' || #{searchT} || '%'
            	</when>
        	</choose>
      	</if>
	</select>
	<select id="getMgrCnt" resultType="Integer" parameterType="hashmap">
		SELECT COUNT(*) AS CNT
		FROM EMP E INNER JOIN APNTM A
		                           ON E.EMP_NUM = A.EMP_NUM
		                   INNER JOIN DEPT D
		                           ON A.DEPT_NUM = D.DEPT_NUM
		                   INNER JOIN RANK R
		                           ON A.RANK_NUM = R.RANK_NUM
		WHERE D.DEPT_NAME LIKE '영%'
		<choose>
			<when test="deptS != 6">
       			AND D.DEPT_NUM = #{deptS}
			</when>
		</choose>
		<if test="searchT != null and searchT != ''">
        	<choose>
       			<when test="empS == 0">
            	   AND E.EMP_NUM LIKE '%' || #{searchT} || '%'
            	</when>
       			<when test="empS == 1">
            	   AND E.EMP_NAME LIKE '%' || #{searchT} || '%'
            	</when>
        	</choose>
      	</if>
	</select>
	<select id="getSalesDaySchdlList" parameterType="hashmap" resultType="hashmap">
		SELECT START_DATE_HR AS "start", SALES_NUM, LEAD_NUM
		FROM SALES_SCHDL
		WHERE SUBSTR(START_DATE_HR, 1, 7) = #{month}
		AND DEL_CHECK IS NULL 
	</select>
</mapper>