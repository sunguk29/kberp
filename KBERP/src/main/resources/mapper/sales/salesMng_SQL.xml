<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="salesMng">

	<!-- 총 게시글 수 -->
	<select id="salesListCnt" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*) AS CNT
		FROM SALES
		WHERE 1 = 1
	</select>
	
	
	<!-- stage0 : 영업기회 단계 -->
	<select id="salesStage0" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*) AS CNT
		FROM SALES
		WHERE 1 = 1
		AND PRGRS_STS_NUM = '0'
	</select>
	
	<!-- stage1 : 영업기회 단계 -->
	<select id="salesStage1" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*) AS CNT
		FROM SALES
		WHERE 1 = 1
		AND PRGRS_STS_NUM = '1'
	</select>
	
	<!-- stage2 : 영업기회 단계 -->
	<select id="salesStage2" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*) AS CNT
		FROM SALES
		WHERE 1 = 1
		AND PRGRS_STS_NUM = '2'
	</select>
	
	<!-- stage3 : 영업기회 단계 -->
	<select id="salesStage3" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*) AS CNT
		FROM SALES
		WHERE 1 = 1
		AND PRGRS_STS_NUM = '3'
	</select>
	
	<!-- 영업관리 리스트 -->
	<select id="getSalesList" parameterType="hashmap" resultType="hashmap">
		SELECT SS.SALES_NUM, SS.PRGRS_STS, SS.PRGRS_STS2, SS.LEAD_NAME, SS.CLNT_CMPNY_NAME, SS.CLNT_NAME, SS.EMP_NAME, SS.EXPCTN_LOAN_SCALE
		FROM ( SELECT S.SALES_NUM, S.MNGR_EMP_NUM, E.EMP_NUM, LDI.EXPCTN_LOAN_SCALE, E.EMP_NAME, L.LEAD_NAME,
		              EC.CLNT_NAME, CC.CLNT_CMPNY_NAME,
		              DECODE(S.PRGRS_STS_NUM, 4, '종료(성공)', 5, '종료(실패)', '진행중') AS PRGRS_STS,
		              DECODE(S.PRGRS_STS_NUM, 0, '영업기회', 1, '제안', 2, '견적', 3, '계약') AS PRGRS_STS2,
		              ROW_NUMBER() OVER(ORDER BY S.SALES_NUM DESC) AS RNUM
		       FROM SALES S INNER JOIN EMP E
		                            ON S.MNGR_EMP_NUM = E.EMP_NUM
		                    INNER JOIN LEAD L
		                            ON S.LEAD_NUM = L.LEAD_NUM
		                    INNER JOIN ENTRPRS_CLNT EC
		                            ON EC.CLNT_NUM = L.CLNT_NUM
		                    INNER JOIN CLNT_CMPNY CC
		                            ON CC.CLNT_CMPNY_NUM = EC.CLNT_CMPNY_NUM
		                    LEFT OUTER JOIN LOAN_DTL_INFO LDI
		                                 ON S.SALES_NUM = LDI.SALES_NUM
		      WHERE 1 = 1
		      <if test="prgrsStage != 9"><!-- 진행단계 -->
		       	<choose>
		       		<when test="prgrsStage == 0">
		       			AND S.PRGRS_STS_NUM = '0'
		       		</when>
		       		<when test="prgrsStage == 1">
		       			AND S.PRGRS_STS_NUM = '1'
		       		</when>
		       		<when test="prgrsStage == 2">
		       			AND S.PRGRS_STS_NUM = '2'
		       		</when>
		       		<when test="prgrsStage == 3">
		       			AND S.PRGRS_STS_NUM = '3'
		       		</when>
		       	</choose>
		       </if>
		      ) SS
		WHERE SS.RNUM BETWEEN #{startCount} AND #{endCount}
	</select>
	
	
	
	
	<!-- 영업기회 기본정보tab 리드에서 가져오기 -->
	<select id="getSales1BringLead" parameterType="hashmap" resultType="hashmap">
		SELECT L.LEAD_NUM, L.LEAD_NAME, CC.CLNT_CMPNY_NAME, EC.CLNT_NAME, E.EMP_NUM, E.EMP_NAME,
		       DECODE(CCG.GRADE_NUM, 0, 'S', 1, 'A', 2, 'B', 3, 'C', 4, 'D') AS GRADE_NAME
		FROM LEAD L INNER JOIN EMP E
		                    ON E.EMP_NUM = L.MNGR_EMP_NUM
		            INNER JOIN ENTRPRS_CLNT EC
		                    ON EC.CLNT_NUM = L.CLNT_NUM
		            INNER JOIN CLNT_CMPNY CC
		                    ON CC.CLNT_CMPNY_NUM = EC.CLNT_CMPNY_NUM
		            INNER JOIN CLNT_CMPNY_GRADE CCG
		                            ON CCG.GRADE_NUM = CC.GRADE_NUM
		WHERE L.LEAD_NUM = #{leadNum}
	</select>
	
	<!-- 영업번호 시퀀스 담기 -->
	<select id="salesSeq" resultType="String">
		SELECT SALES_SEQ.NEXTVAL
		FROM DUAL
	</select>
	
	<!-- 영업기회 등록 : 영업 먼저 넣어주어야 함. -->
	<insert id="sales1AddSales" parameterType="hashmap">
		INSERT INTO SALES(SALES_NUM, MNGR_EMP_NUM, LEAD_NUM)
		VALUES(#{ss}, #{len}, #{llnum})
	</insert>
	
	
	<!-- 영업기회 기본정보tab 제안 단계로 가져오기 -->
	<select id="getSales2BringLead" parameterType="hashmap" resultType="hashmap">
		SELECT S.SALES_NUM, L.LEAD_NUM, L.LEAD_NAME, CC.CLNT_CMPNY_NAME, EC.CLNT_NAME, E.EMP_NUM, E.EMP_NAME, S.MNGR_EMP_NUM,
		       TO_CHAR(S.START_DATE, 'YYYY-MM-DD') AS START_DATE,
		       DECODE(CCG.GRADE_NUM, 0, 'S', 1, 'A', 2, 'B', 3, 'C', 4, 'D') AS GRADE_NAME
		FROM SALES S INNER JOIN EMP E
		                     ON E.EMP_NUM = S.MNGR_EMP_NUM
		             INNER JOIN LEAD L
		                     ON S.LEAD_NUM = L.LEAD_NUM
		             INNER JOIN ENTRPRS_CLNT EC
		                     ON EC.CLNT_NUM = L.CLNT_NUM
		             INNER JOIN CLNT_CMPNY CC
		                     ON CC.CLNT_CMPNY_NUM = EC.CLNT_CMPNY_NUM
		             INNER JOIN CLNT_CMPNY_GRADE CCG
		                     ON CCG.GRADE_NUM = CC.GRADE_NUM
	WHERE S.SALES_NUM = #{salesNum}
	</select>
	
	
	<!-- 영업기회 대출상세정보tab -->
	<insert id="sales1AddLoan" parameterType="hashmap">
		INSERT INTO LOAN_DTL_INFO ( SALES_NUM, LOAN_CAUSE_NUM, EXPCTN_LOAN_SCALE, LOAN_HOPE_TYPE, LOAN_HOPE_TIME )
		VALUES ( #{ss}, #{loanCauseNum}, #{expctnLoanScale}, #{loanHopeType}, #{loanHopeTime})
	</insert>
	
	<!-- 영업기회 대출상세정보tab 제안 단계로 가져오기 -->
	<select id="getSales2BringLoan" parameterType="hashmap" resultType="hashmap">
		SELECT S.SALES_NUM,
		       LOAN_CAUSE_NUM,
		       LDI.EXPCTN_LOAN_SCALE,
		       LOAN_HOPE_TYPE,
		       LOAN_HOPE_TIME
		FROM SALES S LEFT OUTER JOIN LOAN_DTL_INFO LDI
		                     ON S.SALES_NUM = LDI.SALES_NUM
		WHERE S.SALES_NUM = #{salesNum}
	</select>
	
	
	<!-- 예정사업 상세정보tab -->
	<insert id="sales1AddBsns" parameterType="hashmap">
		INSERT INTO EXPCTD_BSNS_INFO ( SALES_NUM, EXPCTD_BSNS_NAME, EXPCTD_BSNS_TYPE, RMKS )
		VALUES ( #{ss}, #{expctdBsnsName}, #{expctdBsnsType}, #{rmks} )
	</insert>
	
	<!-- 예정사업 상세정보tab 제안 단계로 가져오기 -->
	<select id="getSales2BringBsns" parameterType="hashmap" resultType="hashmap">
		SELECT S.SALES_NUM, EXPCTD_BSNS_NAME, EXPCTD_BSNS_TYPE, RMKS
		FROM SALES S LEFT OUTER JOIN EXPCTD_BSNS_INFO EBI
		                          ON S.SALES_NUM = EBI.SALES_NUM
		WHERE S.SALES_NUM = #{salesNum}
	</select>
	
	<!-- 예정사업 첨부파일tab -->
	<insert id="sales1AddBsnsAtt" parameterType="hashmap">
		INSERT INTO EXPCTD_BSNS_ATT_FILE ( ATT_FILE_NUM, SALES_NUM, ATT_FILE_NAME )
		VALUES ( EXPCTD_BSNS_ATT_FILE_SEQ.NEXTVAL, #{ss}, #{attFile} )
	</insert>
	
	
	<!-- 영업기회 상세보기 -->
	<select id="getSales1" resultType="hashmap" parameterType="hashmap">
		SELECT S.SALES_NUM, L.LEAD_NUM, L.LEAD_NAME, CC.CLNT_CMPNY_NAME, EC.CLNT_NAME, S.MNGR_EMP_NUM, E.EMP_NAME,
		       DECODE(CCG.GRADE_NUM, 0, 'S', 1, 'A', 2, 'B', 3, 'C', 4, 'D') AS GRADE_NAME,
		       LDI.LOAN_CAUSE_NUM, LDI.EXPCTN_LOAN_SCALE, LDI.LOAN_HOPE_TYPE, LDI.LOAN_HOPE_TIME, S.PRGRS_STS_NUM,
		       EBI.EXPCTD_BSNS_NAME, EBI.EXPCTD_BSNS_TYPE, EBI.RMKS, TO_CHAR(S.START_DATE, 'YYYY-MM-DD') AS START_DATE,
		       EBAF.ATT_FILE_NUM, EBAF.ATT_FILE_NAME
		FROM SALES S INNER JOIN EMP E
		                     ON S.MNGR_EMP_NUM = E.EMP_NUM
		             INNER JOIN LEAD L
		                     ON S.LEAD_NUM = L.LEAD_NUM
		             INNER JOIN ENTRPRS_CLNT EC
		                     ON EC.CLNT_NUM = L.CLNT_NUM
		             INNER JOIN CLNT_CMPNY CC
		                     ON CC.CLNT_CMPNY_NUM = EC.CLNT_CMPNY_NUM
		             INNER JOIN CLNT_CMPNY_GRADE CCG
		                     ON CCG.GRADE_NUM = CC.GRADE_NUM
		             LEFT OUTER JOIN LOAN_DTL_INFO LDI
		                          ON LDI.SALES_NUM = S.SALES_NUM
		             LEFT OUTER JOIN EXPCTD_BSNS_INFO EBI
		                          ON EBI.SALES_NUM = S.SALES_NUM
		             LEFT OUTER JOIN EXPCTD_BSNS_ATT_FILE EBAF
                         		  ON EBAF.SALES_NUM = S.SALES_NUM
		WHERE S.SALES_NUM = #{salesNum}
	</select>
	
	<!-- 영업기회 수정 : 기본정보tab -->
	<update id="sales1UpdateSales" parameterType="hashmap">
		UPDATE SALES SET MNGR_EMP_NUM = #{empNum}
		WHERE SALES_NUM = #{salesNum}
	</update>
	
	<!-- 영업기회 수정 : 대출상세정보tab -->
	<update id="sales1UpdateLoan" parameterType="hashmap">
		UPDATE LOAN_DTL_INFO SET LOAN_CAUSE_NUM = #{loanCauseNum},
		                         EXPCTN_LOAN_SCALE = #{expctnLoanScale},
		                         LOAN_HOPE_TYPE = #{loanHopeType},
		                         LOAN_HOPE_TIME = #{loanHopeTime}
		WHERE SALES_NUM = #{salesNum}
	</update>
	
	<!-- 영업기회 수정 : 예정사업 상세정보tab -->
	<update id="sales1UpdateBsns" parameterType="hashmap">
		UPDATE EXPCTD_BSNS_INFO SET EXPCTD_BSNS_NAME = #{expctdBsnsName},
		                            EXPCTD_BSNS_TYPE = #{expctdBsnsType},
		                            RMKS = #{rmks}
		WHERE SALES_NUM = #{salesNum}
	</update>
	
	<!-- 영업기회 수정 : 예정사업 첨부파일tab -->
	<update id="sales1UpdateBsnsAtt" parameterType="hashmap">
		UPDATE SALES SET MNGR_EMP_NUM = #{empNum}
		WHERE SALES_NUM = #{salesNum}
	</update>
	
	
	<!-- 영업기회 실패 -->
	<update id="sales1Failure" parameterType="hashmap">
		UPDATE SALES SET PRGRS_STS_NUM = #{prgrsStsNum}
		WHERE SALES_NUM = #{salesNum}
	</update>
	
	
	<!-- 제안 대출 상세정보tab -->
	<insert  id="sales2AddLoan" parameterType="hashmap">
		INSERT INTO SGSTN_LOAN_DTL_INFO ( SALES_NUM, SGSTN_LOAN_CAUSE_NUM, SGSTN_LOAN_SCALE,
		                                  SGSTN_LOAN_TYPE, SGSTN_LOAN_TIME, SGSTN_RDMPTN_TIME )
		VALUES ( #{salesNum}, #{sgstnloanCauseNum}, #{sgstnLoanScale}, #{sgstnloanType}, #{sgstnloanTime} || '-01', #{sgstnRdmptnTime}  || '-01' )
	</insert>
	
	<!-- 제안 고객사 상세정보tab -->
	<insert  id="sales2AddClntCmpny" parameterType="hashmap">
		INSERT INTO SGSTN_CLNT_CMPNY_DTL_INFO ( SALES_NUM, SGSTN_TOTAL_AMNT, SGSTN_DEBT_AMNT,
	                                    	    SGSTN_AVG_RVN_AMNT, SGSTN_EMP_COUNT )
		VALUES ( #{salesNum}, #{sgstnTotalAmnt}, #{sgstnDebtAmnt}, #{sgstnAvgRvnAmnt}, #{sgstnEmpCount} )
	</insert>
	
	<!-- 제안 상세정보tab -->
	<insert  id="sales2AddDtlInfo" parameterType="hashmap">
		INSERT INTO SGSTN_DTL_INFO ( SALES_NUM, DTL_CONT, RMRKS, PRCD_DATE )
		VALUES ( #{salesNum}, #{dtlCont}, #{rmrks}, SYSDATE )
	</insert>
	
	<!-- 제안 상세정보 첨부파일tab -->
	<insert  id="sales2AddDtlInfoAtt" parameterType="hashmap">
		INSERT INTO SGSTN_ATT_FILE ( ATT_FILE_NUM, SALES_NUM, ATT_FILE_NAME )
		VALUES ( SGSTN_ATT_FILE_SEQ.NEXTVAL, #{salesNum}, #{attFile} )
	</insert>
	
	
	
</mapper>







