<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="prsnl">
	<select id="getBasicInfo" parameterType="hashmap" resultType="hashmap">
		SELECT EMP.EMP_NUM, EMP.EMP_NAME, EMP.EMP_NAME_ENG, EMP.EMP_PCTR_FILE,
		       A.DEPT_NUM, A.START_DATE, A.END_DATE, R.RANK_NAME, D.DEPT_NAME
		FROM EMP INNER JOIN (   SELECT TO_CHAR(SQ.START_DATE, 'YYYY-MM-DD') AS START_DATE, TO_CHAR(SQ.END_DATE, 'YYYY-MM-DD') AS END_DATE,
		                               SQ.EMP_NUM, SQ.RANK_NUM, SQ.DEPT_NUM
		                        FROM (  SELECT EMP_NUM, START_DATE, END_DATE, RANK_NUM, DEPT_NUM,
						                       ROW_NUMBER() OVER(PARTITION BY EMP_NUM ORDER BY START_DATE DESC) AS NEWEST
						                FROM APNTM
						                WHERE STS_NUM = '1' ) SQ
						        WHERE SQ.NEWEST = '1'
		                        ) A
		                 ON EMP.EMP_NUM = A.EMP_NUM
		         INNER JOIN RANK R
		                 ON A.RANK_NUM = R.RANK_NUM
		         INNER JOIN DEPT D
		                 ON A.DEPT_NUM = D.DEPT_NUM AND D.DEL_CHECK = '1'
		WHERE EMP.EMP_NUM = #{sEmpNum}
	</select>

	<select id="getHumanInfo" parameterType="hashmap" resultType="hashmap">
		SELECT TO_CHAR(BRTHDT, 'YYYY-MM-DD') AS BRTHDT, GNDR, EMAIL, ZIP_CODE, ADRS, DTL_ADRS, PHONE_NUM, MBL_NUM
		FROM EMP
		WHERE EMP_NUM = #{sEmpNum}
	</select>
	<select id="getWorkInfo" parameterType="hashmap" resultType="hashmap">
		SELECT EMP_NUM, HIRE_TYPE, PRBTN_CHECK
		FROM EMP
		WHERE EMP_NUM = #{sEmpNum}
	</select>
	<select id="getApntmList" parameterType="hashmap" resultType="hashmap">
		SELECT SQ.APNTM_DVSN_NUM, TO_CHAR(SQ.START_DATE, 'YYYY-MM-DD') AS START_DATE, TO_CHAR(SQ.END_DATE, 'YYYY-MM-DD') AS END_DATE,
		       CASE WHEN SQ.NEWEST = '1' AND SQ.OLDEST = '1'
		            THEN '0'
		            WHEN SQ.NEWEST = '1' AND SQ.OLDEST != '1'
		            THEN '1'
		            WHEN SQ.NEWEST != '1' AND SQ.OLDEST = '1'
		            THEN '-1'
		       END AS DATE_TYPE
		FROM (  SELECT E.EMP_NUM, E.HIRE_TYPE, E.PRBTN_CHECK, A.APNTM_DVSN_NUM, A.START_DATE, A.END_DATE,
		               ROW_NUMBER() OVER(ORDER BY START_DATE DESC) AS NEWEST,
		               ROW_NUMBER() OVER(ORDER BY START_DATE ASC) AS OLDEST
		        FROM EMP E INNER JOIN APNTM A
		                           ON E.EMP_NUM = A.EMP_NUM
		        WHERE E.EMP_NUM = #{sEmpNum}
		              AND A.STS_NUM = '1' ) SQ
		WHERE SQ.NEWEST = '1' OR SQ.OLDEST = '1'
	</select>
	<select id="getSlryInfo" parameterType="hashmap" resultType="hashmap">
		SELECT B.BANK_NAME, SA.ACNT_NUM, SA.DPSTR
		FROM SLRY_ACNT SA INNER JOIN BANK B
		                          ON SA.BANK_NUM = B.BANK_NUM
		WHERE SA.EMP_NUM = #{sEmpNum}
	</select>
	
	<select id="getEdctnLevel" parameterType="hashmap" resultType="hashmap">
		SELECT EDCTN_LEVEL_NUM, SCHL_NAME, TO_CHAR(ADMSN_DATE, 'YYYY-MM-DD') AS ADMSN_DATE,
		       TO_CHAR(GRDTN_DATE, 'YYYY-MM-DD') AS GRDTN_DATE, GRADE, SCHL_REGSTR_DVSN
		FROM EDCTN_LEVEL
		WHERE EMP_NUM = #{sEmpNum}
		ORDER BY ADMSN_DATE DESC <!-- 일단 입학일 순 정렬 :: 정렬 조건도 추가하기? -->
	</select>
	<select id="getCr" parameterType="hashmap" resultType="hashmap">
		SELECT CMPNY_NAME, TO_CHAR(JOIN_DATE, 'YYYY-MM-DD') AS JOIN_DATE, TO_CHAR(RSGNT_DATE, 'YYYY-MM-DD') AS RSGNT_DATE,
		       DEPT, PSTN, JOB
		FROM CR
		WHERE EMP_NUM = #{sEmpNum}
		ORDER BY JOIN_DATE DESC <!-- 얘도 일단 입사일 순 정렬 -->
	</select>
	<select id="getQlfctn" parameterType="hashmap" resultType="hashmap">
		SELECT LCNS_NAME, TO_CHAR(ACQRMNT_DATE, 'YYYY-MM-DD') AS ACQRMNT_DATE,
 		       ISSUE_ORGNZT, ACQRMNT_SCORE, TO_CHAR(EXPRTN_DATE, 'YYYY-MM-DD') AS EXPRTN_DATE
		FROM LCNS
		WHERE EMP_NUM = #{sEmpNum}
		ORDER BY ACQRMNT_DATE DESC <!-- 취득일 순 정렬 -->
	</select>
	
	<select id="getMenuAthrty" parameterType="hashmap" resultType="Integer">
		SELECT MA.ATHRTY_TYPE_NUM
			FROM EMP E INNER JOIN MENU_ATHRTY MA
			                   ON E.ATHRTY_NUM = MA.ATHRTY_NUM
			WHERE MA.MENU_NUM = #{menuNum}
			      AND E.EMP_NUM = #{sEmpNum}
	</select>
	
	<!-- 사원조회 쿼리 -->
	<select id="getEmpCount" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*)
		FROM EMP
		WHERE 1 = 1
	</select>
	<select id="getEmpList" parameterType="hashmap" resultType="hashmap">
		SELECT E.EMP_NUM, E.EMP_NAME, E.DEPT_NAME, E.RANK_NAME, E.MBL_NUM, E.HIRE_TYPE, E.WORK_TYPE, E.JOIN_DATE, E.RSGNT_DATE
		FROM (  SELECT EMP.EMP_NUM, EMP.EMP_NAME, D.DEPT_NAME, R.RANK_NAME, EMP.MBL_NUM, EMP.HIRE_TYPE,
				       DECODE(A2.END_DATE, NULL, 1, 0) AS WORK_TYPE,
				       DECODE(A1.START_DATE, NULL, ' ', A1.START_DATE) AS JOIN_DATE,
				       DECODE(A2.END_DATE, NULL, ' ', A2.END_DATE) AS RSGNT_DATE,
				       ROW_NUMBER() OVER(ORDER BY EMP.EMP_NUM) AS RN
				FROM EMP INNER JOIN (   SELECT TO_CHAR(SQ.START_DATE, 'YYYY-MM-DD') AS START_DATE, TO_CHAR(SQ.END_DATE, 'YYYY-MM-DD') AS END_DATE,
				                               SQ.EMP_NUM
				                        FROM (  SELECT EMP_NUM, START_DATE, END_DATE, RANK_NUM, DEPT_NUM,
				                                       ROW_NUMBER() OVER(PARTITION BY EMP_NUM ORDER BY START_DATE ASC) AS OLDEST
				                                FROM APNTM
				                                WHERE STS_NUM = '1' ) SQ
				                        WHERE SQ.OLDEST = '1'
				                        ) A1
				                 ON EMP.EMP_NUM = A1.EMP_NUM
				         INNER JOIN ( SELECT TO_CHAR(SQ.START_DATE, 'YYYY-MM-DD') AS START_DATE, TO_CHAR(SQ.END_DATE, 'YYYY-MM-DD') AS END_DATE,
				                            SQ.EMP_NUM, SQ.RANK_NUM, SQ.DEPT_NUM
				                            FROM (  SELECT EMP_NUM, START_DATE, END_DATE, RANK_NUM, DEPT_NUM,
				                                           ROW_NUMBER() OVER(PARTITION BY EMP_NUM ORDER BY START_DATE DESC) AS NEWEST
				                                    FROM APNTM
				                                    WHERE STS_NUM = '1' ) SQ
				                            WHERE SQ.NEWEST = '1'
				                            ) A2
				                 ON EMP.EMP_NUM = A2.EMP_NUM
				         INNER JOIN RANK R
				                 ON A2.RANK_NUM = R.RANK_NUM
				         INNER JOIN DEPT D
				                 ON A2.DEPT_NUM = D.DEPT_NUM AND D.DEL_CHECK = '1') E
 		WHERE E.RN BETWEEN #{startCount} AND #{endCount}
	</select>
</mapper>